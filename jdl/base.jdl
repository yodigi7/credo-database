entity Person {
    prefix String,
    preferredName String,
    firstName String,
    middleName String,
    lastName String,
    suffix String,
    nameTag String,
    currentMember Boolean,
    membershipStartDate LocalDate,
    membershipExpirationDate LocalDate,
    isHeadOfHouse Boolean required,
    isDeceased Boolean required,
}

entity PersonNotes {
    notes String,
}

entity Organization {
    name String required,
    mailingLabel String,
}

entity OrganizationNotes {
    notes String,
}

entity PersonPhone {
    phoneNumber String unique required minlength(10) pattern(/^\([0-9]{3}\) [0-9]{3}-[0-9]{4}$/)
    type String,
}

entity OrganizationPhone {
    phoneNumber String unique required minlength(10) pattern(/^\([0-9]{3}\) [0-9]{3}-[0-9]{4}$/)
    type String,
}

entity ParishPhone {
    phoneNumber String unique required minlength(10) pattern(/^\([0-9]{3}\) [0-9]{3}-[0-9]{4}$/)
    type String,
}

entity Transaction {
    totalAmount Double min(0),
    date LocalDate,
    genericSubItemsPurchased String,
    costSubItemsPurchased Double min(0),
    numberOfMemberships Integer min(0),
    donation Double min(0),
    eventDonation Double min(0),
    notes String,
}

entity Parish {
    name String unique required,
}

entity Event {
    name String required,
    date LocalDate,
}

entity Ticket {
    count Integer min(0),
    costPerTicket Double min(0),
}

entity PersonEmail {
    email String unique required,
    type String,
    emailNewsletterSubscription YesNoEmpty,
    emailEventNotificationSubscription YesNoEmpty,
}

entity OrganizationEmail {
    email String unique required,
    type String,
    emailNewsletterSubscription YesNoEmpty,
    emailEventNotificationSubscription YesNoEmpty,
}

entity ParishEmail {
    email String unique required,
    type String,
    emailNewsletterSubscription YesNoEmpty,
    emailEventNotificationSubscription YesNoEmpty,
}

entity HouseDetails {
    mailingLabel String,
}

entity HouseAddress {
    streetAddress String,
    city String,
    state String,
    zipcode String,
    type String,
    mailNewsletterSubscription YesNoEmpty,
    mailEventNotificationSubscription YesNoEmpty,
}

entity OrganizationAddress {
    streetAddress String,
    city String,
    state String,
    zipcode String,
}

entity MembershipLevel {
    level String required unique,
}

enum YesNoEmpty {
    YES (Y),
    NO (N),
    EMPTY ("")
}

relationship ManyToOne {
    Transaction{membershipLevel} to MembershipLevel,
    OrganizationAddress{organization} to Organization{addresses},
    Organization{parish} to Parish{organizations},
    OrganizationPhone{organization} to Organization{phones},
    OrganizationEmail{organization} to Organization{emails},
    Person{membershipLevel} to MembershipLevel{people},
    PersonPhone{person} to Person{phones},
    ParishPhone{parish} to Parish{phones},
    Transaction{person} to Person{transactions},
    PersonEmail{person} to Person{emails},
    Person{headOfHouse} to Person{personsInHouse},
    Ticket{person} to Person{tickets},
    Ticket{event} to Event{tickets},
    Person{parish} to Parish{people},
    ParishEmail{parish} to Parish{emails},
    HouseAddress{houseDetails} to HouseDetails{addresses}
}

relationship OneToOne {
    Transaction{tickets} to Ticket{transaction},
    HouseDetails{headOfHouse} to Person{houseDetails},
    PersonNotes{person} to Person{notes},
    OrganizationNotes{organization} to Organization{notes},
    Person{spouse} to Person,
}

relationship ManyToMany {
    Person{organizations} to Organization{persons},
}

paginate all with pagination
service all with serviceClass
filter all
